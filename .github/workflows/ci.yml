name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run linter (flake8)
        if: always()
        run: |
          if command -v flake8 >/dev/null 2>&1; then
            flake8 .
          else
            echo "flake8 not installed — skipping lint"
          fi

      - name: Run tests (pytest) and handle "no tests collected"
        env:
          PYTHONPATH: .
        run: |
          mkdir -p reports
          if command -v pytest >/dev/null 2>&1; then
            pytest --junitxml=reports/junit.xml --maxfail=1 -q || rc=$?
            if [ -n "${rc:-}" ]; then
              # pytest return codes: 0 ok, 1 test failed, 2 interrupted, 3 internal error, 4 usage error, 5 no tests collected
              if [ "$rc" -eq 5 ]; then
                echo "No tests collected by pytest (exit code 5). Marking step as successful (no tests to run)."
                exit 0
              else
                echo "pytest exited with code $rc"
                exit $rc
              fi
            fi
          else
            echo "pytest not installed — skipping tests"
          fi

      - name: Upload test results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.python-version }}
          path: reports/
  
  build-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t car-insurance:${{ github.sha }} .