"""fix_comp

Revision ID: 0e36c848a80e
Revises: 53f6acd839af
Create Date: 2025-10-21 15:29:46.492851

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0e36c848a80e'
down_revision: Union[str, Sequence[str], None] = '53f6acd839af'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade():
    bind = op.get_bind()
    dialect = bind.dialect.name

    # Indexuri standard (ambele DB)
    op.execute("DROP INDEX IF EXISTS ix_car_vin")
    op.execute("DROP INDEX IF EXISTS ix_insurance_policy_car_id_start_date_end_date")
    op.execute("DROP INDEX IF EXISTS ix_claim_car_id_claim_date")
    op.execute("DROP INDEX IF EXISTS ix_policy_year")
    op.create_index('ix_car_vin', 'car', ['vin'], unique=True)
    op.create_index('ix_insurance_policy_car_id_start_date_end_date', 'insurance_policy', ['car_id', 'start_date', 'end_date'])
    op.create_index('ix_claim_car_id_claim_date', 'claim', ['car_id', 'claim_date'])

    # Indexuri funcționale/partial doar pentru Postgres
    if dialect == "postgresql":
        op.execute("CREATE INDEX ix_policy_year ON insurance_policy ((EXTRACT(YEAR FROM start_date)))")
        # op.execute("CREATE INDEX ... WHERE ...")  # partial index

# La downgrade, la fel: verifică dialectul și șterge indexurile corespunzătoare.

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_car_vin', table_name='car')
    op.drop_index('ix_insurance_policy_car_id_start_date_end_date', table_name='insurance_policy')
    op.drop_index('ix_claim_car_id_claim_date', table_name='claim')
    op.execute("DROP INDEX IF EXISTS ix_policy_year")
    # ### end Alembic commands ###

