"""update model car

Revision ID: 53f6acd839af
Revises: 4df02423ebb5
Create Date: 2025-10-21 15:18:23.818225

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa



# revision identifiers, used by Alembic.
revision: str = '53f6acd839af'
down_revision: Union[str, Sequence[str], None] = '4df02423ebb5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_car_vin'), table_name='car')
    op.drop_index(op.f('ix_claim_car_id_claim_date'), table_name='claim')
    op.drop_index(op.f('ix_insurance_policy_car_id_start_date_end_date'), table_name='insurance_policy')
    op.execute("DROP INDEX IF EXISTS ix_policy_year")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    bind = op.get_bind()
    dialect = bind.dialect.name
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP INDEX IF EXISTS ix_policy_year")
    op.execute("DROP INDEX IF EXISTS ix_claim_car_id_claim_date")
    op.execute("DROP INDEX IF EXISTS ix_insurance_policy_car_id_start_date_end_date")
    op.execute("DROP INDEX IF EXISTS ix_car_vin")
    op.create_index(op.f('ix_insurance_policy_car_id_start_date_end_date'), 'insurance_policy', ['car_id', 'start_date', 'end_date'], unique=False)
    op.create_index(op.f('ix_claim_car_id_claim_date'), 'claim', ['car_id', 'claim_date'], unique=False)
    op.create_index(op.f('ix_car_vin'), 'car', ['vin'], unique=1)
    if dialect == "postgresql":
        op.execute("CREATE INDEX ix_policy_year ON insurance_policy ((EXTRACT(YEAR FROM start_date)))")
        # op.execute("CREATE INDEX ... WHERE ...")  # partial index
    # ### end Alembic commands ###
